{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","e","setState","target","value","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAAe,I,kBCGFA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAA4BL,EAAMI,QAAQE,MAAjCN,EAAMI,QAAQC,IACvB,4BAAIL,EAAMI,QAAQG,YCHbC,EAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SAEID,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLdM,G,MAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACpB,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCgCjEG,G,kNA5BbC,MAAQ,CACNR,SAAW,GACXS,YAAa,I,EAGfL,aAAe,SAACM,GACd,EAAKC,SAAS,CAACF,YAAaC,EAAEE,OAAOC,S,uDAEvC,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAE,EAAKP,SAAS,CAACX,SAASkB,S,oBAEvC,WACE,MAAgCC,KAAKX,MAA9BR,EAAP,EAAOA,SAAUS,EAAjB,EAAiBA,YACXW,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQE,KAAKyB,cAAcC,SAASd,EAAYa,kBAElD,OAAS,sBAAK9B,UAAU,MAAf,UACT,kDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAce,KAAKf,eAC5D,cAAC,EAAD,CAAUJ,SAAUoB,W,GAtBNI,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bff02dd1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h1 key={props.monster.id}>{props.monster.name}</h1>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React, { Component } from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.component'\r\n\r\nexport const CardList = props => (\r\n    <div className='card-list'>\r\n        {\r\n        props.monsters.map(monster=>(\r\n        <Card key={monster.id} monster={monster}></Card>\r\n      ))\r\n      }\r\n    </div>\r\n)","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox= ({placeholder, handleChange}) => (\r\n    <input className='search' type='search' placeholder={placeholder} onChange={handleChange}/>\r\n)","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\nimport './App.css';\n\n\nclass App extends Component {\n  state = {  \n    monsters : [],\n    searchField: '',\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value});\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=> response.json())\n    .then(users=>this.setState({monsters:users}))\n  }\n  render() { \n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => (\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    ))\n    return ( <div className=\"App\">\n    <h1>Monsters Rolodex</h1>\n    <SearchBox placeholder='search monsters' handleChange={this.handleChange}></SearchBox>\n    <CardList monsters={filteredMonsters}/>\n    \n  </div> \n  );\n  }\n}\n \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}